services:
  ngrok:
    image: ngrok/ngrok:latest
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml
    command:
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
  
  bot:
    build: .
    environment:
      - POSTGRES_HOST=psql_db
    env_file:
      - ./.env
    container_name: bot
    ports:
      - '8000:8000'
    depends_on:
      - ngrok
      - psql_db
    command: sh -c 'python main.py'

  redis_db:
    image: redis:latest
    restart: on-failure
    networks:
      - common-network
    # ports:
    #   - 6379:6379
    env_file:
      - ./.env
    command: redis-server --requirepass ${REDIS_PASSWORD} --save "" --appendonly no
    # sh -c "echo 1 > /proc/sys/vm/overcommit_memory && redis-server --save 900 1 --loglevel warning"
    volumes:
      - redis_data:/data
    logging:
      driver: "json-file"
      options:
          max-size: "20m"

  psql_db:
    image: postgres:14
    restart: on-failure
    # networks:
    #   - common-network
    ports:
      - '5432:5432'
    env_file:
      - ./.env
    volumes:
      - postgres-data2:/var/lib/postgresql/data
    # command: postgres -c max_connections=2000
    logging:
      driver: "json-file"
      options:
          max-size: "20m"


volumes:
  postgres-data2:
  redis_data: